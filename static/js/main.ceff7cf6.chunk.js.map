{"version":3,"sources":["App.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactListItem.jsx","Components/ContactList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","st","form","label","input","type","onChange","pattern","title","required","btn","Component","ContactListItem","contact","onDeleteContact","listItem","onClick","id","ContactsList","contacts","map","Filter","onContactsFilter","wrapper","App","filter","addContact","newContact","shortId","generate","findTheSameName","alert","newName","normalizedName","toLowerCase","find","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevState","changeFilter","filteredСontacts","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ceff7cf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"label\":\"ContactForm_label__2mfXY\",\"input\":\"ContactForm_input__3dHde\",\"btn\":\"ContactForm_btn__tShh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2qeAn\",\"name\":\"ContactList_name__2vs56\",\"number\":\"ContactList_number__3h_Jg\",\"btn\":\"ContactList_btn__2-jnR\"};","import { Component } from 'react';\nimport st from './ContactForm.module.css';\n\nclass Form extends Component {\n  state = { name: '', number: '' };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={st.form} onSubmit={this.handleSubmit}>\n        <label className={st.label}>\n          Name\n          <input\n            className={st.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={st.label}>\n          Number\n          <input\n            className={st.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={st.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport st from './ContactList.module.css';\n\nconst ContactListItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={st.listItem}>\n      <span className={st.name}>{contact.name}:</span>\n      <span className={st.number}>{contact.number}</span>\n      <button\n        className={st.btn}\n        type=\"button\"\n        onClick={() => onDeleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport st from './Filter.module.css';\n\nconst Filter = ({ onContactsFilter, value }) => {\n  return (\n    <div className={st.wrapper}>\n      <label className={st.label}>\n        Find contacts by name\n        <input\n          className={st.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onContactsFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onContactsFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport contacts from './contacts.json';\nimport shortId from 'shortid';\n\nimport ContactForm from './Components/ContactForm';\nimport ContactsList from './Components/ContactList';\nimport Filter from './Components/Filter';\n\nimport st from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortId.generate(),\n      name,\n      number,\n    };\n\n    if (this.findTheSameName(name)) {\n      return alert('slkdjfsldkjflsl');\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  findTheSameName = newName => {\n    const { contacts } = this.state;\n    const normalizedName = newName.toLowerCase();\n\n    return contacts.find(({ name }) => name.toLowerCase() === normalizedName);\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredСontacts = this.getVisibleContacts();\n\n    return (\n      <div className={st.wrapper}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter onContactsFilter={this.changeFilter} value={filter} />\n        <ContactsList\n          contacts={filteredСontacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__Z84yE\",\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};"],"sourceRoot":""}